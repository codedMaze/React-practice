{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User1\\\\OneDrive\\\\Desktop\\\\portfolio\\\\01-starting-form\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: inputName,\n    hasError: inputNameHasError,\n    isValid: inputNameIsValid,\n    valueChangeHandler: inputNameHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    isTouched: inputNameIsTouched,\n    reset\n  } = useInput(value => value.trim() !== \"\");\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [inputEmailIsTouched, setInputEmailIsTouched] = useState(false);\n  const inputEmailIsValid = inputEmail.includes(\"@\");\n  const emailInputIsValid = inputEmailIsTouched && !inputEmailIsValid;\n  let formIsValid = false;\n  if (inputNameIsValid && inputEmailIsValid) formIsValid = true;\n  const inputEmailHandler = event => {\n    setInputEmail(event.target.value);\n  };\n  const emailInputBlurHandler = () => {\n    setInputEmailIsTouched(true);\n  };\n  const submitFormHandler = event => {\n    event.preventDefault();\n    setInputNameIsTouched(true);\n    if (!inputNameIsValid && !inputEmailIsValid) {\n      return;\n    }\n    reset;\n    setInputEmail(\"\");\n    setInputEmailIsTouched(false);\n  };\n  const nameInputClass = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClass = emailInputIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: inputName,\n        onBlur: nameInputBlurHandler,\n        onChange: inputNameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Pls Enter A Valid Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        value: inputEmail,\n        onBlur: emailInputBlurHandler,\n        onChange: inputEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), emailInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Pls Enter A Valid Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"3ghPIUDV19nz5N7QhkS7O4bJc5U=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","inputName","hasError","inputNameHasError","isValid","inputNameIsValid","valueChangeHandler","inputNameHandler","inputBlurHandler","nameInputBlurHandler","isTouched","inputNameIsTouched","reset","trim","inputEmail","setInputEmail","inputEmailIsTouched","setInputEmailIsTouched","inputEmailIsValid","includes","emailInputIsValid","formIsValid","inputEmailHandler","event","target","emailInputBlurHandler","submitFormHandler","preventDefault","setInputNameIsTouched","nameInputClass","nameInputIsValid","emailInputClass"],"sources":["C:/Users/User1/OneDrive/Desktop/portfolio/01-starting-form/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: inputName,\n    hasError: inputNameHasError,\n    isValid: inputNameIsValid,\n    valueChangeHandler: inputNameHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    isTouched: inputNameIsTouched,\n    reset,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [inputEmailIsTouched, setInputEmailIsTouched] = useState(false);\n\n  const inputEmailIsValid = inputEmail.includes(\"@\");\n\n  const emailInputIsValid = inputEmailIsTouched && !inputEmailIsValid;\n\n  let formIsValid = false;\n\n  if (inputNameIsValid && inputEmailIsValid) formIsValid = true;\n\n  const inputEmailHandler = (event) => {\n    setInputEmail(event.target.value);\n  };\n  const emailInputBlurHandler = () => {\n    setInputEmailIsTouched(true);\n  };\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    setInputNameIsTouched(true);\n\n    if (!inputNameIsValid && !inputEmailIsValid) {\n      return;\n    }\n\n    reset;\n\n    setInputEmail(\"\");\n    setInputEmailIsTouched(false);\n  };\n\n  const nameInputClass = nameInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClass = emailInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitFormHandler}>\n      <div className={nameInputClass}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={inputName}\n          onBlur={nameInputBlurHandler}\n          onChange={inputNameHandler}\n        />\n      </div>\n      {nameInputIsValid && <p className=\"error-text\">Pls Enter A Valid Name</p>}\n      <div className={emailInputClass}>\n        <label htmlFor=\"name\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          value={inputEmail}\n          onBlur={emailInputBlurHandler}\n          onChange={inputEmailHandler}\n        />\n      </div>\n      {emailInputIsValid && (\n        <p className=\"error-text\">Pls Enter A Valid Email</p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}