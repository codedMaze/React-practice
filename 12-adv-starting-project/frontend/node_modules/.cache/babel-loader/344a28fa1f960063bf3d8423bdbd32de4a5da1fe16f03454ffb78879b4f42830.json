{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User1\\\\OneDrive\\\\Desktop\\\\portfolio\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport EditEventPage from \"./Pages/EditEventPage\";\nimport ErrorPage from \"./Pages/ErrorPage\";\nimport EventDetailPage from \"./Pages/EventDetailPage\";\nimport EventLayout from \"./Pages/EventLayout\";\nimport EventsPage from \"./Pages/EventsPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport NewEventPage from \"./Pages/NewEventPage\";\nimport RootLayout from \"./Pages/RootLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: \"events/:eventId\",\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 49\n        }, this)\n      }, {\n        path: \"events/new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 44\n        }, this)\n      }, {\n        path: \"events/:eventId/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 54\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","EditEventPage","ErrorPage","EventDetailPage","EventLayout","EventsPage","HomePage","NewEventPage","RootLayout","App","router","path","element","errorElement","children","index"],"sources":["C:/Users/User1/OneDrive/Desktop/portfolio/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport EditEventPage from \"./Pages/EditEventPage\";\nimport ErrorPage from \"./Pages/ErrorPage\";\nimport EventDetailPage from \"./Pages/EventDetailPage\";\nimport EventLayout from \"./Pages/EventLayout\";\nimport EventsPage from \"./Pages/EventsPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport NewEventPage from \"./Pages/NewEventPage\";\nimport RootLayout from \"./Pages/RootLayout\";\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      errorElement: <ErrorPage />,\n      children: [\n        { index: true, element: <HomePage /> },\n        {\n          path: \"events\",\n          element: <EventLayout />,\n          children: [\n            { index: true, element: <EventsPage /> },\n            { path: \"events/:eventId\", element: <EventDetailPage /> },\n            { path: \"events/new\", element: <NewEventPage /> },\n            { path: \"events/:eventId/edit\", element: <EditEventPage /> },\n          ],\n        },\n      ],\n    },\n  ]);\n\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,UAAU,MAAM,oBAAoB;AAAC;AAE5C,SAASC,GAAG,GAAG;EACb,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;IACEY,IAAI,EAAE,GAAG;IACTC,OAAO,eAAE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG;IACvBC,YAAY,eAAE,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG;IAC3BC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAAEH,OAAO,eAAE,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EACtC;MACED,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAE,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAG;MACxBE,QAAQ,EAAE,CACR;QAAEC,KAAK,EAAE,IAAI;QAAEH,OAAO,eAAE,QAAC,UAAU;UAAA;UAAA;UAAA;QAAA;MAAI,CAAC,EACxC;QAAED,IAAI,EAAE,iBAAiB;QAAEC,OAAO,eAAE,QAAC,eAAe;UAAA;UAAA;UAAA;QAAA;MAAI,CAAC,EACzD;QAAED,IAAI,EAAE,YAAY;QAAEC,OAAO,eAAE,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA;MAAI,CAAC,EACjD;QAAED,IAAI,EAAE,sBAAsB;QAAEC,OAAO,eAAE,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA;MAAI,CAAC;IAEhE,CAAC;EAEL,CAAC,CACF,CAAC;EAEF,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEF;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAvBQD,GAAG;AAyBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}