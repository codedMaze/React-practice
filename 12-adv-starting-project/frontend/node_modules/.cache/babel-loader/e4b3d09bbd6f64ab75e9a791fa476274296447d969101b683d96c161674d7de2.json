{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User1\\\\OneDrive\\\\Desktop\\\\portfolio\\\\12-adv-starting-project\\\\frontend\\\\src\\\\Pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const event = useRouteLoaderData(\"eventDetail\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: event.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n_s(EventDetailPage, \"X1tKbLClSO07u2RBpksvOHS2Fwk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not find event\"\n    }, {\n      status: 500\n    });\n  }\n  return response;\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","EventDetailPage","event","loader","request","params","id","eventId","response","fetch","ok","message","status"],"sources":["C:/Users/User1/OneDrive/Desktop/portfolio/12-adv-starting-project/frontend/src/Pages/EventDetailPage.js"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nconst EventDetailPage = () => {\r\n  const event = useRouteLoaderData(\"eventDetail\");\r\n\r\n  return <EventItem event={event.event} />;\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nexport const loader = async ({ request, params }) => {\r\n  const id = params.eventId;\r\n\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not find event\" }, { status: 500 });\r\n  }\r\n  return response;\r\n};\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAMC,KAAK,GAAGH,kBAAkB,CAAC,aAAa,CAAC;EAE/C,oBAAO,QAAC,SAAS;IAAC,KAAK,EAAEG,KAAK,CAACA;EAAM;IAAA;IAAA;IAAA;EAAA,QAAG;AAC1C,CAAC;AAAC,GAJID,eAAe;EAAA,QACLF,kBAAkB;AAAA;AAAA,KAD5BE,eAAe;AAMrB,eAAeA,eAAe;AAE9B,OAAO,MAAME,MAAM,GAAG,cAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMZ,IAAI,CAAC;MAAEa,OAAO,EAAE;IAAuB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAClE;EACA,OAAOJ,QAAQ;AACjB,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}